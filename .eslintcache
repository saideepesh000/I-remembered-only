[{"E:\\re-re\\src\\index.js":"1","E:\\re-re\\src\\App.js":"2","E:\\re-re\\src\\components\\ShowRandomLetter.js":"3","E:\\re-re\\src\\components\\UserInput.js":"4","E:\\re-re\\src\\utils\\useInterval.js":"5","E:\\re-re\\src\\temp.js":"6"},{"size":201,"mtime":1610478239769,"results":"7","hashOfConfig":"8"},{"size":261,"mtime":1610788750538,"results":"9","hashOfConfig":"8"},{"size":2561,"mtime":1610797920725,"results":"10","hashOfConfig":"8"},{"size":225,"mtime":1610478195445,"results":"11","hashOfConfig":"8"},{"size":515,"mtime":1610543815499,"results":"12","hashOfConfig":"8"},{"size":888,"mtime":1610693450259,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mh6b9c",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\re-re\\src\\index.js",[],"E:\\re-re\\src\\App.js",["28","29"],"E:\\re-re\\src\\components\\ShowRandomLetter.js",["30","31","32","33","34"],"E:\\re-re\\src\\components\\UserInput.js",[],"E:\\re-re\\src\\utils\\useInterval.js",["35","36"],"import React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport default function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}",["37","38"],"E:\\re-re\\src\\temp.js",["39","40"],{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":17},{"ruleId":"41","severity":1,"message":"45","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":12},{"ruleId":"41","severity":1,"message":"46","line":1,"column":19,"nodeType":"43","messageId":"44","endLine":1,"endColumn":28},{"ruleId":"41","severity":1,"message":"47","line":1,"column":30,"nodeType":"43","messageId":"44","endLine":1,"endColumn":36},{"ruleId":"41","severity":1,"message":"48","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":19},{"ruleId":"41","severity":1,"message":"49","line":10,"column":9,"nodeType":"43","messageId":"44","endLine":10,"endColumn":14},{"ruleId":"41","severity":1,"message":"50","line":10,"column":16,"nodeType":"43","messageId":"44","endLine":10,"endColumn":24},{"ruleId":"41","severity":1,"message":"51","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":13},{"ruleId":"41","severity":1,"message":"52","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"41","severity":1,"message":"46","line":1,"column":19,"nodeType":"43","messageId":"44","endLine":1,"endColumn":28},{"ruleId":"41","severity":1,"message":"47","line":1,"column":30,"nodeType":"43","messageId":"44","endLine":1,"endColumn":36},"no-unused-vars","'UserInput' is defined but never used.","Identifier","unusedVar","'Temp' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useInterval' is defined but never used.","'start' is assigned a value but never used.","'setStart' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-global-assign","no-unsafe-negation"]